// -------------------------------------------------------------------------- //
//       Sitecore Install Framework - Sitecore XM1-CD Configuration           //
//                                                                            //
//  Run this configuration to install a single instance of Sitecore.          //
//  This instance is configured for Content Delivery.                         //
//  This instance is configured to use Lucene.                                  //
//                                                                            //
//  NOTE: Only single line comments are accepted in configurations.           //
// -------------------------------------------------------------------------- //

{
    "Parameters": {
        // Parameters are values that may be passed when Install-SitecoreConfiguration is called.
        // Parameters must declare a Type and may declare a DefaultValue and Description.
        // Parameters with no DefaultValue are required when Install-SitecoreConfiguration is called.

        "Package": {
            "Type": "string",
            "Description": "The path to the Web Deploy package to deploy."
        },
        "LicenseFile": {
            "Type": "string",
            "Description": "The path to the Sitecore license file."
        },
        "SqlDbPrefix": {
            "Type": "string",
            "Description": "The prefix used for all Sql databases."
        },
        "SiteName": {
            "Type": "string",
            "DefaultValue": "SitecoreXM1CD",
            "Description": "The name of the site to be deployed."
        },
        "SqlCoreUser": {
            "Type": "string",
            "DefaultValue": "gd-svc-sql",
            "Description": "The Sql user for the Core connection string in Sitecore."
        },
        "SqlCorePassword": {
            "Type": "string",
            "DefaultValue": "Pa55w0rd!8117",
            "Description": "The Sql password for the Core connection string in Sitecore."
        },
        "SqlWebUser": {
            "Type": "string",
            "DefaultValue": "gd-svc-sql",
            "Description": "The Sql user for the Web connection string in Sitecore."
        },
        "SqlWebPassword": {
            "Type": "string",
            "DefaultValue": "Pa55w0rd!8117",
            "Description": "The Sql password for the Web connection string in Sitecore."
        },
        "SqlFormsUser": {
            "Type": "string",
            "DefaultValue": "gd-svc-sql",
            "Description": "The Sql user for the Experience Forms connection string in Sitecore."
        },
        "SqlFormsPassword": {
            "Type": "string",
            "DefaultValue": "Pa55w0rd!8117",
            "Description": "The Sql password for the Experience Forms connection string in Sitecore."
        },
        "SqlServer": {
            "Type": "string",
            "DefaultValue": ".\\SQLSERVER",
            "Description": "The Sql Server where databases will be installed."
        },
        "FolderRootPath": {
            "Type": "string",
            "Description": "The site root folder path to use."
        },
        "AppPooluserName": {
            "Type": "string",
            "Description": "The IIS AppPool user name to use."
        },
        "AppPoolPassword": {
            "Type": "string",
            "Description": "The IIS AppPool user password to use."
        },
        "IntegratedSecurityState": {
            "Type": "string",
            "DefaultValue": "True",
            "Description": "The IIS AppPool user password to use."
        },
        "SSLCert": {
            "Type": "string",
            "Description": "The certificate to use for HTTPS web bindings. Provide the name or the thumbprint. If not provided a certificate will be generated.",
            "DefaultValue": ""
        }
    },
    "Variables": {
        // Variables are values calculated in a configuration.
        // They can reference Parameters, other Variables, and config functions.

        // Database names.
        "Sql.Database.Core":    "[concat(parameter('SqlDbPrefix'), '_Core')]",
        "Sql.Database.Web":     "[concat(parameter('SqlDbPrefix'), '_Web')]",
        "Sql.Database.Forms":   "[concat(parameter('SqlDbPrefix'), '_ExperienceForms')]",

        // The security certificate details
        "Security.CertificateStore": "Cert:\\Localmachine\\My",
        "Security.SSL.CertificateThumbprint": "[GetCertificateThumbprint(parameter('SSLCert'), variable('Security.CertificateStore'))]",
        

        // The sites full path on disk
        "Site.PhysicalPath": "[joinpath(environment('SystemDrive'), parameter('FolderRootPath'), parameter('SiteName'))]",

        // The sites data folder
        "Site.DataFolder": "[joinpath(variable('Site.PhysicalPath'), 'App_Data')]"
    },
    "Tasks": {
        // Tasks are separate units of work in a configuration.
        // Each task is an action that will be completed when Install-SitecoreConfiguration is called.
        // By default, tasks are applied in the order they are declared.
        // Tasks may reference Parameters, Variables, and config functions.

        "CreatePaths": {
            // Ensure the destination path for the site exists.
            "Type": "EnsurePath",
            "Params": {
                "Exists": [ "[variable('Site.PhysicalPath')]" ]
            }
        },
        "CreateAppPool": {
            // Creates or updates the app pool.
            "Type": "AppPool",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Properties": {
                    "ProcessModel": {
                        "identityType" : "SpecificUser",
                            "userName" : "[parameter('AppPooluserName')]",
                            "password" : "[parameter('AppPoolPassword')]"
                    }
                }
            }
        },
        "CreateWebsite": {
            // Creates or updates the IIS website instance.
            "Type": "Website",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "ApplicationPool": "[parameter('SiteName')]",
                "PhysicalPath": "[variable('Site.PhysicalPath')]"
            }
        },
        "StopWebsite": {
            // Stops the website if it is running.
            "Type": "ManageWebsite",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Action": "Stop"
            }
        },
        "StopAppPool": {
            // Stops the app pool if it is running.
            "Type": "ManageAppPool",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Action": "Stop"
            }
        },
        "RemoveDefaultBinding": {
            // Removes the default *:80 web binding
            "Type": "WebBinding",
            "Params": {
                "SiteName" : "[parameter('SiteName')]",
                "Remove" : [ { "Port": "80", "IPAddress": "*" } ]
            }
        },
        "RemoveHTTPSBinding": {
            // Removes the HTTPS *:443 web binding
            "Type": "WebBinding",
            "Params": {
                "SiteName" : "[parameter('SiteName')]",
                "Remove" : [ { "Port": "443", "IPAddress": "*" } ]
            }
        },
        "CreateBindingsWithThumprint": {
            // Configures the site bindings for the website.
            "Type": "WebBinding",
            "Params": {
                "SiteName" : "[parameter('SiteName')]",
                "Add": [
                    {
                        "HostHeader": "[parameter('SiteName')]",
                        "Protocol": "https",
                        "Port": "443",
                        "SSLFlags": 1,
                        "Thumbprint": "[variable('Security.SSL.CertificateThumbprint')]"
                    }
                ]
            },
            "Skip": "[not(parameter('SSLCert'))]"
        },
        "CreateDefaultBindings": {
            // Configures the site bindings for the website.
            "Type": "WebBinding",
            "Params": {
                "SiteName" : "[parameter('SiteName')]",
                "Add": [
                    {
                        "HostHeader": "[parameter('SiteName')]",
                        "Protocol": "http",
                        "Port": "80",
                        "IPAddress": "*"
                    }
                ]
            }
        },
        "CreateHostHeader": {
            // Sets a hostheader for the website.
            "Type": "HostHeader",
            "Params": {
                "HostName": "[parameter('SiteName')]"
            }
        },
        "SetPermissions": {
            // Sets permissions for the app pool user.
            "Type": "FilePermissions",
            "Params": {
                "Path" : "[variable('Site.PhysicalPath')]",
                "Rights": [
                    {
                        "User": "[concat('IIS AppPool\\', parameter('SiteName'))]",
                        "FileSystemRights": "FullControl",
                        "InheritanceFlags": [ "ContainerInherit", "ObjectInherit"]
                    }
                ]
            }
        },
        "InstallWDP": {
            "Type": "WebDeploy",
            "Params" : {
                "Verb": "Sync",
                "Arguments": {
                    "Source": {
                        "Package": "[resolvepath(parameter('Package'))]"
                    },
                    "Dest": "Auto",
                    "Skip": [
                        { "ObjectName": "dbDacFx" },
                        { "ObjectName": "dbFullSql" }
                      ],  
                    "SetParam": [
                        { "Name": "Application Path", "Value": "[parameter('SiteName')]" },
                        { "Name": "Database Server Name", "Value": "[parameter('SqlServer')]" },
                        { "Name": "IntegratedSecurityState", "Value": "[parameter('IntegratedSecurityState')]" },
                        { "Name": "Core DB Name", "Value": "[variable('Sql.Database.Core')]" },
                        { "Name": "Web DB Name", "Value": "[variable('Sql.Database.Web')]" },
                        { "Name": "Experience Forms DB Name", "Value": "[variable('Sql.Database.Forms')]" },
                        { "Name": "Core DB User Name", "Value":  "[parameter('SqlCoreUser')]"},
                        { "Name": "Core DB User Password", "Value":  "[parameter('SqlCorePassword')]"},
                        { "Name": "Web DB User Name", "Value":  "[parameter('SqlWebUser')]"},
                        { "Name": "Web DB User Password", "Value":  "[parameter('SqlWebPassword')]"},
                        { "Name": "Experience Forms DB User Name", "Value":  "[parameter('SqlFormsUser')]"},
                        { "Name": "Experience Forms DB User Password", "Value":  "[parameter('SqlFormsPassword')]"},
                        //Unused parameters
                        { "Name": "SOLR Connection String", "Value": "UNUSED" },
                        { "Name": "Solr Web Index Name", "Value": "UNUSED"},
                        { "Name": "Solr Marketing Definitions Web Index Name", "Value": "UNUSED"},
                        { "Name": "Solr Marketing Asset Web Index Name", "Value": "UNUSED"},
                        { "Name": "Solr FXM Web Index Name", "Value": "UNUSED"}
                    ]
                }
            }
        },
        "UpdatePasswordHashingAlgorythm": {
            "Type": "SetXml",
            "Params": [
                { "FilePath": "[joinpath(variable('Site.PhysicalPath'), 'web.config')]", "Xpath":"/configuration/system.web/membership", "Attributes": {"hashAlgorithmType": "SHA512"} }
            ]
        },
        "SetLicense" : {
            // Copies the license file to the instance data folder.
            "Type": "Copy",
            "Params": {
                "Source": "[resolvepath(parameter('LicenseFile'))]",
                "Destination": "[variable('Site.DataFolder')]"
            }
        },
        "StartAppPool": {
            // Starts the app pool.
            "Type": "ManageAppPool",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Action": "Start"
            }
        }
    }
}